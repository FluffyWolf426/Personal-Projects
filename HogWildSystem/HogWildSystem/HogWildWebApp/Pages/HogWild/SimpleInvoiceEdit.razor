@page "/HogWild/SimpleInvoiceEdit/{InvoiceID:int}/{CustomerID:int}/{EmployeeID:int}"
@using HogWildWebApp.BlazorPagination
<PageTitle>Simple Invoice Edit</PageTitle>
<header>
    @if (invoice.InvoiceID == 0)
    {
        <h3>New Invoice</h3>
    }
    else
    {
        <h3>Invoice: @InvoiceID</h3>
    }
    <div class="row">
        <p style="white-space: pre-line" />
        @* <div class="stack-horizontal-header"> *@
        <h4> Invoice Date: @invoice.InvoiceDate.Date.ToShortDateString()</h4>
        <h4> Employee: @invoice.EmployeeName</h4>
        <h4>Customer: @invoice.CustomerName</h4>
        @* </div> *@
    </div>
    @if (invoice.CustomerID == 0)
    {
        <div>
            <p style="white-space: pre-line" />
            <p style="white-space: pre-line" />
            <p style="white-space: pre-line" />
            <h3>-------------------------------------------------------------------------------------------</h3>
            <h4>Search</h4>
            <p>
                <label>Last Name:</label>
                <InputText id="lastName"
                           Style="Width: 140px; background-color: lightgray"
                @bind-Value="lastName" />
            </p>
            <p>
                <label>Phone #:</label>
                <InputText id="phoneNumber"
                           Style="Width: 140px; background-color: lightgray"
                @bind-Value="phoneNumber" />
            </p>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="SearchCustomer">Search</MudButton>
            @if (Customers.Count == 0)
            {
                <p><em>Please enter either a last name or phone number</em></p>
            }
            else
            {
                <TableTemplate Items="Customers" Context="CustomerSearchView">
                    <TableHeader>
                        <th></th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>City</th>
                        <th>Phone</th>
                        <th>Email</th>
                    </TableHeader>
                    <RowTemplate>
                        <td>
                            <button class="btn-success" @onclick="() => SelectCustomer(CustomerSearchView.CustomerID)">Select Customer</button>
                        </td>
                        <td>@CustomerSearchView.FirstName</td>
                        <td>@CustomerSearchView.LastName</td>
                        <td>@CustomerSearchView.City</td>
                        <td>@CustomerSearchView.Phone</td>
                        <td>@CustomerSearchView.Email</td>
                    </RowTemplate>
                </TableTemplate>
            }
        </div>
    }

</header>
<body>
    @if (invoice.CustomerID > 0)
    {
        <p style="white-space: pre-line" />
        <div>
            <h4>Search</h4>
            <p>
                <label>Categories:</label>
                <InputSelect @bind-Value="categoryID" Style="Width: 140px; background-color: lightgray">
                    <option value="0">select ...</option>
                    @foreach (var category in partCategories)
                    {
                        <option value="@category.LookupID">@category.Name</option>
                    }
                </InputSelect>
            </p>
            <p>
                <label>Description:</label>
                <InputText id="description"
                           Style="Width: 140px; background-color: lightgray"
                @bind-Value="description" />
            </p>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="SearchParts">Search</MudButton>
        </div>

        @if (PaginatorParts.RowCount == 0)
        {
            <p><em>Please enter either a description or category</em></p>
        }
        @if (invoice.InvoiceLines.Any() || PaginatorParts.RowCount > 0)
        {
            <!--
            NOTE: To use the Sort Icon, you must added the following to the _host.cshtml file
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            -->
            <TableTemplate Items="PaginatorParts.Results" Context="PartView">
                <TableHeader>
                    <th></th>
                    <th class="SortField @GetSortColumn("CategoryName")" @onclick="@( () => Sort("CategoryName"))">Category<i class="@(SetSortIcon("CategoryName"))"></i></th>
                    <th class="SortField @GetSortColumn("PartID")" @onclick="@( () => Sort("PartID"))">Part ID<i class="@(SetSortIcon("PartID"))"></i></th>
                    <th class="SortField @GetSortColumn("Description")" @onclick="@( () => Sort("Description"))">Description<i class="@(SetSortIcon("Description"))"></i></th>
                    <th class="SortField @GetSortColumn("Cost")" @onclick="@( () => Sort("Cost"))">Cost<i class="@(SetSortIcon("Cost"))"></i></th>
                    <th class="SortField @GetSortColumn("Price")" @onclick="@( () => Sort("Price"))">Price<i class="@(SetSortIcon("Price"))"></i></th>
                    <th class="SortField @GetSortColumn("ROL")" @onclick="@( () => Sort("ROL"))">ROL<i class="@(SetSortIcon("ROL"))"></i></th>
                    <th class="SortField @GetSortColumn("QOH")" @onclick="@( () => Sort("QOH"))">QOH<i class="@(SetSortIcon("QOH"))"></i></th>
                </TableHeader>
                <RowTemplate>
                    <td>
                        <button class="btn-success" @onclick="() => AddPart(PartView.PartID)">Add</button>
                    </td>
                    <td>@PartView.CategoryName</td>
                    <td>@PartView.PartID</td>
                    <td>@PartView.Description</td>
                    <td>@PartView.Cost</td>
                    <td>@PartView.Price</td>
                    <td>@PartView.ROL</td>
                    <td>@PartView.QOH</td>
                </RowTemplate>
            </TableTemplate>
            <div align="center">
                <BlazorPager CurrentPage="PaginatorParts.CurrentPage"
                             PageCount="PaginatorParts.PageCount"
                             VisiblePages="3"
                             ShowFirstLast="true"
                             ShowPageNumbers="true"
                             FirstText="&laquo;"
                             LastText="&raquo;"
                             NextText="&rsaquo;"
                             PreviousText="&lsaquo;"
                             OnPageChanged="(async e => { CurrentPage = e; await SearchParts();})">
                </BlazorPager>
            </div>
            <p style="white-space: pre-line" />
            <div>
                <TableTemplate Items="invoice.InvoiceLines" Context="InvoiceLineView">
                    <TableHeader>
                        <th></th>
                        <th>Part ID</th>
                        <th>Description</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Ext. Price</th>
                    </TableHeader>
                    <RowTemplate>
                        <td>
                            <MudButton Variant="Variant.Filled" Color="Color.Warning"
                            @onclick="@(e => DeleteInvoiceLine(InvoiceLineView.PartID))">Delete</MudButton>
                        </td>
                        <td>@InvoiceLineView.PartID</td>
                        <td>@InvoiceLineView.Description</td>
                        <td>
                            <MudTextField T="int" InputType="InputType.Number"
                            @bind-value="@InvoiceLineView.Quantity"
                                          Variant="Variant.Outlined" Margin="Margin.Dense"
                                          TextChanged="UpdateSubtotalAndTax" />
                        </td>
                        <td>@InvoiceLineView.Price</td>
                        <td>@InvoiceLineView.ExtentPrice</td>
                    </RowTemplate>
                </TableTemplate>
            </div>
            <div class="row">
                <div class="stack-vertical">
                    <p>---------------------------</p>
                    <p>SubTotal: @invoice.SubTotal.ToString("c")</p>
                    <p>Tax: @invoice.Tax.ToString("c")</p>
                    <p>==============</p>
                    <p><strong>Total: @invoice.Total.ToString("c")</strong></p>
                </div>
            </div>
        }
        <div>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="Save">Save</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="CancelClose">Close/Cancel</MudButton>
        </div>
    }
    else
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="Close">Close</MudButton>        
    }

</body>
<footer>
    @if (hasFeedback)
    {
        <blockquote>@feedbackMessage</blockquote>
    }
    @if (hasError)
    {
        <blockquote>
            @errorMessage
            <ul>
                @foreach (var detail in errorDetails)
                {
                    <li>@detail</li>
                }
            </ul>
        </blockquote>
    }
</footer>

